@page "/counter"

@using System.IO
@using System.Text.Json

@inject HttpClient http

<h1>Add New Story</h1>

<!-- todo: revisit the code block below -->
@if (!string.IsNullOrEmpty(statusMessage))
{
    <div class="alert @bootstrapAlertType mt-4" role="alert">

        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-up-circle" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-7.5 3.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V11.5z" />
        </svg>

        <strong>Finished</strong>
        <br />

        @statusMessage

    </div>
}

@if (imgUrl != string.Empty)
{
    <img src="@imgUrl">
}

<br />

<EditForm Model="@story" OnSubmit="@AddStoryAsync">
    <InputTextArea @ref="inputTextArea" class="form-control" @bind-Value="story.StoryText" rows="20"></InputTextArea>
    <br />
    <button class="btn btn-primary" type="submit">Add</button>
</EditForm>


@code {

    public class StoryModel
    {
        public string? StoryText { get; set; }
    }


    private StoryModel story = new();

    int PNG_WIDTH = 300;
    int PNG_CHARS_PER_ROW = 30;


    InputTextArea inputTextArea;


    string imgUrl = string.Empty;

    string bootstrapAlertType = "alert-success";
    string statusMessage = string.Empty;



    private async Task AddStoryAsync()
    {
        if (string.IsNullOrEmpty(story.StoryText)) return;

        // todo: remove < > from string

        HttpResponseMessage response =
            await http.GetAsync(
                "https://api.imgbun.com/png?key=f47fb593fd54e825bb029ad9e1d8deab&text=" + story.StoryText.Substring(0, Min(499, story.StoryText.Length))
            );

        if (response.IsSuccessStatusCode)
        {
            string r = await response.Content.ReadAsStringAsync();
            imgUrl = JsonSerializer.Deserialize<Dictionary<string, string>>(r)["direct_link"];

            bootstrapAlertType = "alert-success";
            statusMessage = imgUrl;

            story.StoryText = string.Empty;
        }
        else
        {
            bootstrapAlertType = "alert-danger";
            statusMessage = response.ReasonPhrase;
        }
    }

    private int Min(int first, int second) => first < second ? first : second;
}
