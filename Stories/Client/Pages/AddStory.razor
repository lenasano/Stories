@page "/AddStory"

@attribute [Authorize]

@using System.IO
@using System.Text.Json
@using System.Net.Http.Headers

@using Stories.Shared
@using Stories.Shared.Models

@inject HttpClient http

<h1>Add New Story</h1>

<!-- todo: revisit the code block below -->
@if (!string.IsNullOrEmpty(statusMessage))
{
    <div class="alert @bootstrapAlertType mt-4" role="alert">

        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-up-circle" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-7.5 3.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V11.5z" />
        </svg>

        @statusMessage

    </div>
}

<p />

<EditForm Model="@story" OnSubmit="@AddStoryAsync">

    <InputText class="form-control" @bind-Value="story.Title" />
    <InputTextArea class="form-control" @bind-Value="story.FullText" rows="20" maxlength="2000"/>

    <br />
    <button class="btn btn-primary" type="submit">Add Story</button>
</EditForm>


@code {

    private StoryModel story = new();

    string imgUrl = string.Empty;

    string bootstrapAlertType = "alert-success";
    string statusMessage = string.Empty;



    private async Task AddStoryAsync()
    {
        if (string.IsNullOrEmpty(story.FullText)) return;
        {
            await PostStoryToServerAsync();

            story.Title = string.Empty;
            story.FullText  = string.Empty;
        }
    }

    private int Min(int first, int second) => first < second ? first : second;

    private async Task PostStoryToServerAsync()
    {
        story.Title    = story.Title   .Trim();
        story.FullText = story.FullText.Trim();

        HttpResponseMessage result = await http.PostAsJsonAsync("StoryFile", story);

        if( result.IsSuccessStatusCode )
        {
            bootstrapAlertType = "alert-success";
            statusMessage = "Success! The story was added succesfully.";
        }
        else
        {
            bootstrapAlertType = "alert-danger";
            statusMessage = "Oops, something went wrong.";
        }
    }
}
