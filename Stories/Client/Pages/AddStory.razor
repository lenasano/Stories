@page "/AddStory"

@attribute [Authorize]

@using System.IO
@using System.Text.Json
@using System.Net.Http.Headers

@using Stories.Shared.Models

@inject HttpClient http

<h2>Add New Story</h2>

@if (!string.IsNullOrEmpty(status.Title))
{
    <div class="alert @status.BootstrapAlertType mt-4" role="alert">
        <b>@status.Title</b> @status.Message

        @if (@status.Title.Contains("Success"))
        {
            <span>. Click <a href ="/Story/@storyId">here</a> to view the story.</span>
        }
    </div>
}
else
{
    <p></p>
}

<EditForm Model="@story" OnSubmit="@AddStoryAsync">
    <div class="form-group">
        <label>Story Title</label>
        <InputText class="form-control" @bind-Value="story.Title"/>
    </div>
    <div class="form-group">
        <label>Story Text</label>
        <InputTextArea class="form-control" @bind-Value="story.FullText" rows="20" maxlength="2000"/>
    </div>
    <button class="btn btn-primary" type="submit" disabled="@loading">
        @if (loading)
        {
            <span class="spinner-border spinner-border-sm mr-1"></span>
        }
        Add Story
    </button>
</EditForm>


@code {

    private bool loading;

    private StoryModel story = new();
    private StatusInfo status = new();

    //string imgUrl = string.Empty;
    private string storyId = string.Empty;


    private async Task AddStoryAsync()
    {
        loading = true;

        if (string.IsNullOrEmpty(story.FullText)) return;

        story.Title    = story.Title   .Trim();
        story.FullText = story.FullText.Trim();

        story.SetFirstParagraph();

        try
        {
            HttpResponseMessage firebaseResult = await http.PostAsJsonAsync("api/StoryData", story);

            story.StoryId = await firebaseResult.Content.ReadAsStringAsync();
            story.DateCreated = DateTime.Today;                                 // no need to query firebase to get the specific story creation datetime, the day created is enough 

            if (!firebaseResult.IsSuccessStatusCode) throw new Exception();

            HttpResponseMessage serverResult = await http.PostAsJsonAsync("api/StoryFile", story);

            if (!serverResult.IsSuccessStatusCode) throw new Exception();

            status = new() {
                BootstrapAlertType = "alert-success",
                Title = "Success! ",
                Message = $"The story \"{story.Title}\" was added successfully"
            };

            storyId = story.StoryId;    // copy the id for the link

            story = new StoryModel();   // reset
        }
        catch (Exception)
        {
            status = new() {
                BootstrapAlertType = "alert-danger",
                Title = "Error: ",
                Message = "Oops, something went wrong."
            };
        }
        finally
        {
            loading = false;
        }
    }
}
