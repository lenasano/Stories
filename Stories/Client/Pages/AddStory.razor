@page "/AddStory"

@attribute [Authorize]

@using System.IO
@using System.Text.Json
@using System.Net.Http.Headers

@using Stories.Shared
@using Stories.Shared.Models

@inject HttpClient http

<h1>Add New Story</h1>

<!-- todo: revisit the code block below -->
@if (!string.IsNullOrEmpty(statusMessage))
{
    <div class="alert @bootstrapAlertType mt-4" role="alert">

        <b>@statusTitle</b> @statusMessage

    </div>
}

<p />

<EditForm Model="@story" OnSubmit="@AddStoryAsync">

    <InputText class="form-control" @bind-Value="story.Title" />
    <InputTextArea class="form-control" @bind-Value="story.FullText" rows="20" maxlength="2000"/>

    <br />
    <button class="btn btn-primary" type="submit">Add Story</button>
</EditForm>


@code {

    private StoryModel story = new();

    string imgUrl = string.Empty;

    string bootstrapAlertType = "alert-success";
    string statusTitle   = string.Empty;
    string statusMessage = string.Empty;


    private async Task AddStoryAsync()
    {
        if (string.IsNullOrEmpty(story.FullText)) return;

        story.Title    = story.Title   .Trim();
        story.FullText = story.FullText.Trim();

        story.SetFirstParagraph();

        try
        {

            HttpResponseMessage firebaseResult = await http.PostAsJsonAsync("api/StoryData", story);

            string? storyid = await firebaseResult.Content.ReadAsStringAsync();
            if (storyid is null) throw new NullReferenceException();

            HttpResponseMessage serverResult = await http.PostAsJsonAsync("api/StoryFile", story);

            if (
                   !firebaseResult.IsSuccessStatusCode
                || !serverResult.IsSuccessStatusCode
            )
            {
                throw new Exception();
            }

            bootstrapAlertType = "alert-success";
            statusTitle = "Success! ";
            statusMessage = $"The story \"{story.Title}\" was added successfully.";

            story.Title = string.Empty;
            story.FullText = string.Empty;
            
        }
        catch (Exception)
        {
            bootstrapAlertType = "alert-danger";
            statusTitle = "Error: ";
            statusMessage = "Oops, something went wrong.";
        }
    }
}
