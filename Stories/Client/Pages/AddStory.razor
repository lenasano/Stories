@page "/AddStory"

@attribute [Authorize]

@using System.IO
@using System.Text.Json
@using System.Net.Http.Headers

@using Stories.Shared.Models

@inject HttpClient http

<h1>Add New Story</h1>

@if (!string.IsNullOrEmpty(status.Title))
{
    <div class="alert @status.BootstrapAlertType mt-4" role="alert">
        <b>@status.Title</b> @status.Message

        @if (@status.Title.Contains("Success"))
        {
            <span>. Click <a href ="/Story/@storyId">here</a> to view the story.</span>
        }
    </div>
}

<EditForm Model="@story" OnSubmit="@AddStoryAsync">
    
                <div class="form-group">
    <label>Story Title</label>
    <InputText class="form-control" @bind-Value="story.Title"/>
    </div>
    
                <div class="form-group">
    <label>Story Text</label>
    <InputTextArea class="form-control" @bind-Value="story.FullText" rows="20" maxlength="2000"/>
    </div>
    <button class="btn btn-primary" type="submit">Add Story</button>
</EditForm>


@code {

    private StoryModel story = new();
    private StatusInfo status = new();

    //string imgUrl = string.Empty;
    private string storyId = string.Empty;


    private async Task AddStoryAsync()
    {
        if (string.IsNullOrEmpty(story.FullText)) return;

        story.Title    = story.Title   .Trim();
        story.FullText = story.FullText.Trim();

        story.SetFirstParagraph();

        try
        {
            HttpResponseMessage firebaseResult = await http.PostAsJsonAsync("api/StoryData", story);

            story.StoryId = await firebaseResult.Content.ReadAsStringAsync();
            if (string.IsNullOrEmpty(story.StoryId)) throw new NullReferenceException();

            HttpResponseMessage serverResult = await http.PostAsJsonAsync("api/StoryFile", story);

            if (
                   !firebaseResult.IsSuccessStatusCode
                || !serverResult.IsSuccessStatusCode
            )
            {
                throw new Exception();
            }

            status.BootstrapAlertType = "alert-success";
            status.Title = "Success! ";
            status.Message = $"The story \"{story.Title}\" was added successfully";
            storyId = story.StoryId;  // copy the id for the link

            story = new StoryModel();
        }
        catch (Exception)
        {
            status.BootstrapAlertType = "alert-danger";
            status.Title = "Error: ";
            status.Message = "Oops, something went wrong.";
        }
    }
}
